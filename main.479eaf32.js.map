{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","rows","querySelectorAll","form","createElement","inputActive","textValue","normalizeValue","el","index","isNumeric","value","cells","textContent","replace","sortColumn","ev","target","setAttribute","getAttribute","direction","isNaN","sort","a","b","aValue","bValue","localeCompare","forEach","row","append","showNotification","type","text","notification","notificationTitle","classList","add","toLowerCase","dataset","qa","prepend","parentNode","insertBefore","nextSibling","setTimeout","remove","saveChanges","cell","input","columnName","newText","trim","test","insertAdjacentHTML","th","addEventListener","preventDefault","formData","FormData","data","Object","fromEntries","entries","name","length","position","age","newRow","insertRow","key","insertCell","Number","toLocaleString","style","currency","minimumFractionDigits","push","reset","closest","children","cellIndex","cellText","appendChild","focus","occ"],"mappings":"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","file":"main.479eaf32.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\nconst rows = [...tbody.querySelectorAll('tr')];\nconst form = document.createElement('form');\nlet inputActive = false;\nlet textValue = '';\n\nform.classList.add('new-employee-form');\n\nform.insertAdjacentHTML('afterbegin', `\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n  <label>Position: \n    <input\n      name=\"position\"\n      type=\"text\"\n      data-qa=\"position\"\n      required\n    >\n  </label>\n  <label>Office: \n    <select name=\"office\" data-qa=\"office\" required>\n      <option>Tokyo</option>\n      <option>Singapore</option>\n      <option>London</option>\n      <option>New York</option>\n      <option>Edinburgh</option>\n      <option>San Francisco</option>\n    </select>\n  </label>\n  <label>Age: \n    <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n  </label>\n  <label>Salary: \n    <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n  </label>\n  <button>Save to table</button>\n`);\n\ntable.parentNode.insertBefore(form, table.nextSibling);\n\ntable.querySelectorAll('thead th').forEach((th, index) => {\n  th.addEventListener('click', (ev) => {\n    sortColumn(index, ev);\n  });\n});\n\nfunction normalizeValue(el, index, isNumeric) {\n  const value = el.cells[index].textContent.replace(/[$,]/g, '');\n\n  return isNumeric ? +value : value;\n}\n\nfunction sortColumn(index, ev) {\n  ev.target.setAttribute('data-direction',\n    ev.target.getAttribute('data-direction')\n  && ev.target.getAttribute('data-direction') === 'asc' ? 'desc' : 'asc');\n\n  const direction = ev.target.getAttribute('data-direction');\n\n  const isNumeric = !isNaN(normalizeValue(rows[0], index, true));\n\n  rows.sort((a, b) => {\n    const aValue = normalizeValue(a, index, isNumeric);\n    const bValue = normalizeValue(b, index, isNumeric);\n\n    return isNumeric\n      ? (direction === 'asc' ? (aValue - bValue) : (bValue - aValue))\n      : (direction === 'asc'\n        ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue));\n  });\n\n  rows.forEach(row => {\n    table.querySelector('tbody').append(row);\n  });\n}\n\nrows.forEach(row => {\n  row.addEventListener('click', () => {\n    table.querySelector('.active')\n    && table.querySelector('.active').classList.remove('active');\n    row.classList.add('active');\n  });\n});\n\nfunction showNotification(type, text) {\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('h3');\n\n  notification.classList.add('notification', `${type.toLowerCase()}`);\n  notification.dataset.qa = 'notification';\n  notificationTitle.textContent = type;\n  notification.textContent = text;\n  notification.prepend(notificationTitle);\n  form.parentNode.insertBefore(notification, form.nextSibling);\n\n  setTimeout(() => notification.remove(), 5000);\n};\n\nform.addEventListener('submit', (ev) => {\n  ev.preventDefault();\n\n  document.querySelector('.notification')\n    && document.querySelector('.notification').remove();\n\n  const formData = new FormData(form);\n  const data = Object.fromEntries(formData.entries());\n\n  if (data.name.trim().length < 4) {\n    showNotification('Error', 'Name must be at least 4 letters');\n\n    return;\n  }\n\n  if (data.position.trim().length < 4) {\n    showNotification('Error', 'Position must be at least 4 letters');\n\n    return;\n  }\n\n  if (data.age < 18 || data.age > 90) {\n    showNotification('Error', 'Age must be between 18 and 90');\n\n    return;\n  }\n\n  if (!/^[a-zA-Z\\s]+$/.test(data.name)) {\n    showNotification('Error',\n      'Name must contain only Latin letters and spaces');\n\n    return;\n  }\n\n  if (!/^[a-zA-Z\\s]+$/.test(data.position)) {\n    showNotification('Error',\n      'Position must contain only Latin letters and spaces');\n\n    return;\n  }\n\n  const newRow = tbody.insertRow();\n\n  Object.entries(data).forEach(([key, value]) => {\n    const cell = newRow.insertCell();\n\n    cell.textContent = key === 'salary'\n      ? Number(value).toLocaleString('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n      })\n      : value;\n  });\n\n  rows.push(newRow);\n  showNotification('Success', 'Row is added to the table');\n\n  form.reset();\n});\n\ntable.addEventListener('dblclick', (ev) => {\n  if (inputActive) {\n    return;\n  };\n\n  const cell = ev.target.closest('td');\n  const columnName = table.querySelector('thead tr')\n    .children[cell.cellIndex].textContent.trim();\n\n  if (!cell) {\n    return;\n  };\n\n  const cellText = cell.textContent.trim();\n\n  textValue = cellText;\n\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.classList.add('cell-input');\n  input.value = cellText;\n\n  cell.textContent = '';\n  cell.appendChild(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    saveChanges(cell, input, columnName);\n  });\n\n  input.addEventListener('keydown', (occ) => {\n    if (occ.key === 'Enter') {\n      occ.preventDefault();\n      saveChanges(cell, input, columnName);\n    }\n  });\n\n  inputActive = true;\n});\n\nfunction saveChanges(cell, input, columnName) {\n  let newText = input.value.trim();\n\n  if (newText === '') {\n    newText = textValue;\n    showNotification('Error', 'No blank value is allowed');\n  }\n\n  const regex = {\n    'Name': /^[a-zA-Z]+\\s[a-zA-Z]+$/,\n    'Position': /^[a-zA-Z\\s]+$/,\n    'Office': /^[a-zA-Z\\s]+$/,\n    'Age': /^\\d+$/,\n    'Salary': /^\\$\\d+(,\\d{3})*(\\.\\d{2})?$/,\n  };\n\n  if (!regex[columnName].test(newText)) {\n    newText = textValue;\n\n    showNotification('Error',\n      'Input editable values must match the data in the table');\n  }\n\n  if (columnName === 'Age' && (newText < 18 || newText > 90)) {\n    newText = textValue;\n    showNotification('Error', 'Age must be between 18 and 90');\n  }\n\n  cell.textContent = newText;\n  inputActive = false;\n}\n"]}